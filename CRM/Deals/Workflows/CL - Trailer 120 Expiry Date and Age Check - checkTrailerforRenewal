getTrailer = zoho.crm.getRecordById("Deals",TrailerID);
//info getTrailer;
if(getTrailer.get("Creator_ID") != "")
{
	if(getTrailer.get("Contact_Name") != null)
	{
		contactName = getTrailer.get("Contact_Name").get("name");
		get_ContactInfo = zoho.crm.getRecordById("Contacts",getTrailer.get("Contact_Name").get("id").toLong());
		Email = get_ContactInfo.get("Email");
		//Email = "rajapiran@cloudlion.org";
	}
	else
	{
		contactName = "";
	}
	info "yes creator id";
	getTemplateCRM = invokeurl
	[
		url :"https://www.zohoapis.com/crm/v6/settings/email_templates/5778486000010291070"
		type :GET
		connection:"crm"
	];
	//info getTemplateCRM.get("email_templates").get(0).get("content");
	creatorID = getTrailer.get("Creator_ID").toLong();
	// creatorID = 4564627000000217023;
	getAllTrailers = zoho.creator.getRecords("service_recprotect","quotation","All_Trailers","TrailerQuote == " + creatorID,1,200,"creator");
	//info "getAllTrailers " + getAllTrailers;
	statusList = List();
	CRM_Status = List();
	TotalTrailers = 0;
	msg = "";
	Risk = "";
	getTemplate = zoho.creator.getRecords("service_recprotect","quotation","All_Email_Templates","Title == \"Non_Eligible Trailer\"",1,200,"creator");
	for each  trailer in getAllTrailers.get("data")
	{
		info trailer.get("ID");
		TotalTrailers = TotalTrailers + 1;
		updateMap = Map();
		getTrailerFromCreator = zoho.creator.getRecordById("service_recprotect","quotation","All_Trailers",trailer.get("ID"),"creator");
		//info "getTrailerFromCreator " + getTrailerFromCreator;
		if(getTrailerFromCreator.get("data").get("Trailer_Age") > 35)
		{
			info "Yes above 35";
			//Trailer can't be renewed
			updateMap.put("Trailer_Status","Non-Eligible");
			statusList.add("OverAge");
			Risk = msg + "<br>" + getTrailerFromCreator.get("data").get("Trailer_Model_Year") + "," + getTrailerFromCreator.get("data").get("Trailer_Manufacturer") + "," + getTrailerFromCreator.get("data").get("Trailer_Model") + "," + getTrailerFromCreator.get("data").get("Select_Trailer_Type") + "<br>";
			msg = msg + "<br>" + getTrailerFromCreator.get("data").get("Trailer_Model_Year") + "," + getTrailerFromCreator.get("data").get("Trailer_Manufacturer") + "," + getTrailerFromCreator.get("data").get("Trailer_Model") + "," + getTrailerFromCreator.get("data").get("Select_Trailer_Type") + "<br><br>";
			msg = msg + getTemplate.get("data").get(0).get("Mail_Content").replaceAll("asset year",getTrailerFromCreator.get("data").get("Trailer_Model_Year")).replaceAll("make",getTrailerFromCreator.get("data").get("Trailer_Manufacturer")).replaceAll("model",getTrailerFromCreator.get("data").get("Trailer_Model")).replaceAll("VIN",getTrailerFromCreator.get("data").get("VIN")).replaceAll("watercraft/trailer",getTrailerFromCreator.get("data").get("Select_Trailer_Type")).replaceAll("expiry date of policy",getTrailer.get("Expiry_Date"));
			info "msg->" + msg;
			//.replaceAll("serial #",getTrailerFromCreator.get("data").get("Serial"))
		}
		else
		{
			info "No below 35";
			updateMap.put("Eligible_for_auto_Renewal",true);
			updateMap.put("Trailer_Status","Eligible");
		}
		updateTrailer = zoho.creator.updateRecord("service_recprotect","quotation","All_Trailers",trailer.get("ID"),updateMap,Map(),"creator");
		info updateTrailer;
	}
	if(statusList.size() > 0)
	{
		modifiedContent = getTemplateCRM.get("email_templates").get(0).get("content").replaceAll("Dynamic Content",msg).replaceAll("&lt;Contact Name&gt;",contactName);
		modifiedSubject = getTemplateCRM.get("email_templates").get(0).get("subject").replaceAll("deal name",getTrailer.get("Deal_Name"));
		//info modifiedContent;
		//,"template":{"id":"4516886000014770109"}
		data = {{"from":{"email":zoho.adminuserid},"to":{{"email":Email}},"subject":modifiedSubject,"content":modifiedContent,"mail_format":"html"}};
		json_data = Map();
		json_data.put("data",data);
		send_mail = invokeurl
		[
			url :"https://www.zohoapis.com/crm/v3/Deals/" + TrailerID + "/actions/send_mail"
			type :POST
			parameters:json_data.toString()
			connection:"crm"
		];
		info "send_mail---->" + send_mail;
		//-------------------------------writer template merge send to admin-------------------------------------------------
		// 		                                                   getAllFieldsResponse = invokeurl
		// 														[
		// 															url :"https://writer.zoho.com/api/v1/documents/s3en7f554d79030ed493fa165a9bda422319f/fields"
		// 															type :GET
		// 															connection:"cl_writter"
		// 														];
		// 										 		info getAllFieldsResponse;
		dataMap = Map();
		dataMap.put("Date",zoho.currentdate);
		dataMap.put("Name",contactName);
		dataMap.put("Address",get_ContactInfo.get("Mailing_Address"));
		dataMap.put("City",get_ContactInfo.get("Mailing_City"));
		dataMap.put("Province",get_ContactInfo.get("Mailing_State"));
		dataMap.put("Country",get_ContactInfo.get("Mailing_Country"));
		dataMap.put("Postal_Code",get_ContactInfo.get("Mailing_Zip"));
		dataMap.put("Email",get_ContactInfo.get("Email"));
		dataMap.put("Policy_Number",getTrailer.get("Policy_Number"));
		dataMap.put("Customer_First_Name",get_ContactInfo.get("First_Name"));
		dataMap.put("Risk",Risk);
		dataMap.put("Expiry_Date",getTrailer.get("Expiry_Date"));
		dataMap.put("Service_Rep_Name",zoho.loginuser);
		dataMap.put("Carrier",getTrailer.get("Carrier"));
		getTemplateCRM = invokeurl
		[
			url :"https://www.zohoapis.com/crm/v6/settings/email_templates/5778486000018395118"
			type :GET
			connection:"crm"
		];
		modifiedContent = getTemplateCRM.get("email_templates").get(0).get("content").replaceAll("#SERVICEREP#",contactName);
		modifiedSubject = "Send the attached Register Letter to the " + contactName;
		param = Map();
		param.put("merge_data",{"data":dataMap});
		param.put("output_format","pdf");
		param.put("response_type","link");
		param.put("filename","Send the attached Register Letter to the" + contactName);
		response = invokeurl
		[
			url :"https://www.zohoapis.com/writer/api/v1/documents/s3en7f554d79030ed493fa165a9bda422319f/merge"
			type :POST
			parameters:param
			connection:"cl_writter"
		];
		if(response != null)
		{
			msg = response.get("URL").toString();
			getNOS_Doc = invokeurl
			[
				url :msg
				type :GET
				connection:"cl_writter"
			];
			getNOS_Doc.setParamName("file");
			upload_Res = invokeurl
			[
				url :"https://www.zohoapis.com/crm/v2/files"
				type :POST
				files:getNOS_Doc
				connection:"crm"
			];
			//info upload_Res;
			if(upload_Res.get("data") != null)
			{
				attachment_ID = upload_Res.get("data").getJSON("details").get("id");
				//info attachment_ID;
			}
			data = {{"from":{"email":zoho.adminuserid},"to":{{"email":Email}},"subject":modifiedSubject,"content":modifiedContent,"mail_format":"html","attachments":{{"id":attachment_ID}}}};
			json_data = Map();
			json_data.put("data",data);
			send_mail = invokeurl
			[
				url :"https://www.zohoapis.com/crm/v3/Deals/" + TrailerID + "/actions/send_mail"
				type :POST
				parameters:json_data.toString()
				connection:"crm"
			];
			info send_mail;
		}
	}
	if(TotalTrailers == statusList.size())
	{
		CRM_Status.add("No Trailers");
	}
	else if(statusList.size() == 0)
	{
		CRM_Status.add("All Trailers");
	}
	else
	{
		CRM_Status.add("Partial Trailers - Over Age");
	}
	info "CRM_Status -->" + CRM_Status;
	updateCRM_Map = Map();
	updateCRM_Map.put("Renewal_Eligibility",CRM_Status);
	updateCRM_Map.put("Renewal_Stage","120th Day");
	updateCRM = zoho.crm.updateRecord("Deals",TrailerID,updateCRM_Map);
	// Creator Status update
	creatorMap = Map();
	creatorMap.put("Renewal_Eligibility",CRM_Status.toList());
	creatorMap.put("Renewal_Stage","120th Day");
	creatorUpdate = zoho.creator.updateRecord("service_recprotect","quotation","All_Trailer_Quotations",getTrailer.get("Creator_ID").toLong(),creatorMap,Map(),"creator");
	info "Update Creator --->" + creatorUpdate;
}