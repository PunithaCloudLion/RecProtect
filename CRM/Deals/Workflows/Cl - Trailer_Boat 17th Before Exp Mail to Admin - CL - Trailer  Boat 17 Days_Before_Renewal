/*Cl - Trailer/Boat 17th Before Exp Mail to Admin - CL - Trailer / Boat :17 Days_Before_Renewal*/

getBoatandTrailer = zoho.crm.getRecordById("Deals",DealID);
if(getBoatandTrailer.size() > 0)
{
	PolicyNUM = getBoatandTrailer.get("Policy_Number") + " - FUTURE";
	Policy_Number = getBoatandTrailer.get("Policy_Number");
	//--autocharge boat
	getEndPointfromCreatorBoat = zoho.creator.getRecords("service_recprotect","quotation","All_Api_Configurations","Name_Process == \"Boat AutoCharge API\"",1,200,"creator");
	AutoChargeAPIENDPOINTBoat = getEndPointfromCreatorBoat.get("data").get(0).get("End_Point");
	//--autocharge boat
	getEndPointfromCreatorTrailer = zoho.creator.getRecords("service_recprotect","quotation","All_Api_Configurations","Name_Process == \"Trailer AutoCharge API\"",1,200,"creator");
	AutoChargeAPIENDPOINTTrailer = getEndPointfromCreatorTrailer.get("data").get(0).get("End_Point");
	if(getBoatandTrailer.get("Layout").get("name") == "Boat Policy")
	{
		getAllBoats = zoho.creator.getRecords("service_recprotect","quotation","Boats_Report","Zoho_Crm_ID == \"" + DealID + "\" &&  Policy_Number == \"" + Policy_Number + "\"",1,200,"creator");
		//-------------------------------------------------------------
		for each  allBoatQuote in getAllBoats.get("data")
		{
			parammap = Map();
			parammap.put("organization_id","RECPROTECT1");
			parammap.put("quote_record_id",ifNull(allBoatQuote.get("Quote_Record_ID_Server"),""));
			parammap.put("policy_change_balance",allBoatQuote.get("Total_Payable_Premium_after_tax"));
			parammap.put("payment_for","RENEWAL");
			parammap.put("stripe_customer_id",ifNull(allBoatQuote.get("Stripe_Customer_ID"),""));
			parammap.put("payment_method_id",ifNull(allBoatQuote.get("Stripe_Payment_Method_ID"),""));
			//info parammap;
			//----------------- code belong to thisapp.Server_Side.callServer function 
			headerMap = Map();
			headerMap.put("Content-Type","application/json");
			Commonresp = invokeurl
			[
				url :AutoChargeAPIENDPOINTBoat
				type :POST
				parameters:parammap.toString()
				headers:headerMap
			];
			//	info "Boatresp" + Commonresp;
		}
	}
	if(getBoatandTrailer.get("Layout").get("name") == "Trailer Policy")
	{
		getAllTrailer = zoho.creator.getRecords("service_recprotect","quotation","All_Trailer_Quotations","Zoho_Crm_ID == \"" + DealID + "\" &&  Policy_Number == \"" + Policy_Number + "\"",1,200,"creator");
		//info "getAllTrailer"+getAllTrailer;
		for each  allTrailer in getAllTrailer.get("data")
		{
			parammap = Map();
			parammap.put("organization_id","RECPROTECT1");
			parammap.put("quote_record_id",ifNull(allTrailer.get("Quote_Record_ID_Server"),""));
			parammap.put("policy_change_balance",allTrailer.get("Total_Payable_Premium_after_tax"));
			parammap.put("payment_for","RENEWAL");
			parammap.put("stripe_customer_id",ifNull(allTrailer.get("Stripe_Customer_ID"),""));
			parammap.put("payment_method_id",ifNull(allTrailer.get("Stripe_Payment_Method_ID"),""));
			//info parammap;
			//----------------- code belong to thisapp.Server_Side.callServer function 
			headerMap = Map();
			headerMap.put("Content-Type","application/json");
			Commonresp = invokeurl
			[
				url :AutoChargeAPIENDPOINTTrailer
				type :POST
				parameters:parammap.toString()
				headers:headerMap
			];
			info "Trailerresp" + Commonresp;
		}
	}
	//info "getAllBoats" + getAllBoats;
	// 	Layout = getBoatandTrailer.get("Layout").get("name");
	if(getBoatandTrailer.get("Contact_Name") != null)
	{
		contactName = getBoatandTrailer.get("Contact_Name").get("name");
		get_ContactInfo = zoho.crm.getRecordById("Contacts",getBoatandTrailer.get("Contact_Name").get("id"));
		//Email = get_ContactInfo.get("Email");
		Email = "vivek.v@cloudlion.org";
		///info get_ContactInfo;
	}
	else
	{
		contactName = "";
	}
	if(getBoatandTrailer.get("Additional_Insured") != null)
	{
		Addition_Insured1 = getBoatandTrailer.get("Additional_Insured").get("name");
	}
	else
	{
		Addition_Insured1 = "";
	}
	if(getBoatandTrailer.get("Additional_Insured_Name") != null)
	{
		Addition_Insured2 = getBoatandTrailer.get("Additional_Insured_Name").get("name");
	}
	else
	{
		Addition_Insured2 = "";
	}
	getTemplateCRM = invokeurl
	[
		url :"https://www.zohoapis.com/crm/v6/settings/email_templates/5778486000018229001"
		type :GET
		connection:"crm"
	];
	modifiedContent = getTemplateCRM.get("email_templates").get(0).get("content").replaceAll("#customerName#",contactName).replaceAll("#Dealname#",getBoatandTrailer.get("Policy_Number"));
	modifiedSubject = getBoatandTrailer.get("Policy_Number") + " - REG CANC NP";
	// 												getAllFieldsResponse = invokeurl
	// 													[
	// 														url :"https://writer.zoho.com/api/v1/documents/s3en78e995d5837b64c5dac217cbc744b290e/fields"
	// 														type :GET
	// 														connection:"cl_writter"
	// 													];
	// 									 		info getAllFieldsResponse;
	dataMap = Map();
	dataMap.put("Date",zoho.currentdate);
	dataMap.put("Name",contactName);
	dataMap.put("Address",get_ContactInfo.get("Mailing_Address"));
	dataMap.put("City",get_ContactInfo.get("Mailing_City"));
	dataMap.put("Province",get_ContactInfo.get("Mailing_State"));
	dataMap.put("Country",get_ContactInfo.get("Mailing_Country"));
	dataMap.put("Postal_Code",get_ContactInfo.get("Mailing_Zip"));
	dataMap.put("Email",get_ContactInfo.get("Email"));
	dataMap.put("Policy_Number",getBoatandTrailer.get("Policy_Number"));
	dataMap.put("First_Name",get_ContactInfo.get("First_Name"));
	dataMap.put("Expiry_Date",getBoatandTrailer.get("Expiry_Date"));
	dataMap.put("Service_Rep_Name",zoho.loginuser);
	param = Map();
	param.put("merge_data",{"data":dataMap});
	param.put("output_format","pdf");
	param.put("response_type","link");
	param.put("filename",getBoatandTrailer.get("Policy_Number") + " - REG CANC NP");
	response = invokeurl
	[
		url :"https://www.zohoapis.com/writer/api/v1/documents/s3en78e995d5837b64c5dac217cbc744b290e/merge"
		type :POST
		parameters:param
		connection:"cl_writter"
	];
	//	info response.get("URL");
	if(response != null)
	{
		msg = response.get("URL").toString();
		//info msg;
		getNOS_Doc = invokeurl
		[
			url :msg
			type :GET
			connection:"cl_writter"
		];
		getNOS_Doc.setParamName("file");
		upload_Res = invokeurl
		[
			url :"https://www.zohoapis.com/crm/v2/files"
			type :POST
			files:getNOS_Doc
			connection:"crm"
		];
		//info upload_Res;
		if(upload_Res.get("data") != null)
		{
			attachment_ID = upload_Res.get("data").getJSON("details").get("id");
			//	info attachment_ID;
		}
		//-------autocharge
		//getTrailer quotations		
		// ----------autocharge api ends
		if(Commonresp.get("success") == true)
		{
			paymentStatusUpdateMap = Map();
			paymentStatusUpdateMap.put("Payment_Status","Paid");
			updatePaymentStatusUpdate = zoho.crm.updateRecord("Deals",DealID,paymentStatusUpdateMap);
		}
		else if(Commonresp.get("success") == false)
		{
			data = {{"from":{"email":zoho.adminuserid},"to":{{"email":Email}},"subject":modifiedSubject,"content":modifiedContent,"mail_format":"html","attachments":{{"id":attachment_ID}}}};
			json_data = Map();
			json_data.put("data",data);
			send_mail = invokeurl
			[
				url :"https://www.zohoapis.com/crm/v3/Deals/" + DealID + "/actions/send_mail"
				type :POST
				parameters:json_data.toString()
				connection:"crm"
			];
			info send_mail;
		}
	}
}